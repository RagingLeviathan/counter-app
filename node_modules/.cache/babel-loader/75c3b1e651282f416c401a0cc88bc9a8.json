{"ast":null,"code":"import _defineProperty from \"/Users/ngraham/Documents/counter-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ngraham/Documents/counter-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport './App.css';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }, {\n        id: 5,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n\n    console.log('App - Constructor'); //this.state = this.props.something;\n  }\n\n  componentDidMount() {\n    console.log('App - Mounted');\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.counters.filter(c => c.value > 0).length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Counters, {\n      counters: this.state.counters,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ngraham/Documents/counter-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","constructor","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleReset","map","c","handleDelete","counterId","filter","console","log","componentDidMount","render","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAW1BI,EAAAA,WAAW,GAAG;AACZ;AADY,SAVdC,KAUc,GAVN;AACNC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJM,EAKN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OALM;AADJ,KAUM;;AAAA,SAUdC,eAVc,GAUIC,OAAO,IAAI;AAC3B,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAsBD,OAAtB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAhBa;;AAAA,SAkBdQ,WAlBc,GAkBA,MAAM;AAChB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBC,CAAC,IAAI;AAC5CA,QAAAA,CAAC,CAACR,KAAF,GAAU,CAAV;AACA,eAAOQ,CAAP;AACD,OAHgB,CAAjB;AAIA,WAAKH,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACH,KAxBa;;AAAA,SA0BdW,YA1Bc,GA0BEC,SAAD,IAAe;AAC1B,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA2BH,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASW,SAAzC,CAAjB;AACA,WAAKL,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACH,KA7Ba;;AAEZc,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAFY,CAGZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAuBDE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA2BH,CAAC,IAAGA,CAAC,CAACR,KAAF,GAAU,CAAzC,EAA4CgB,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWC,QADvB;AAEE,MAAA,OAAO,EAAE,KAAKQ,WAFhB;AAGE,MAAA,WAAW,EAAE,KAAKL,eAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAYD;;AAvDyB;;AA0D5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport NavBar from './components/navbar';\nimport './App.css';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  state = {\n    counters: [\n        { id: 1, value: 0 },\n        { id: 2, value: 0 },\n        { id: 3, value: 0 },\n        { id: 4, value: 0 },\n        { id: 5, value: 0 }\n    ]\n  };\n\n  constructor() {\n    super();\n    console.log('App - Constructor');\n    //this.state = this.props.something;\n  }\n\n  componentDidMount() {\n    console.log('App - Mounted');\n  }\n\n  handleIncrement = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = {...counter};\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({counters});\n  };\n\n  handleDelete = (counterId) => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({ counters});\n  }\n\n  render() { \n    return ( \n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c =>c.value > 0).length}/>\n        <main>\n          <Counters \n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}/>\n        </main>\n      </React.Fragment>\n      );\n  }\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}