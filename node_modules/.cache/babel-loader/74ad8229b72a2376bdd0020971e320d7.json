{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.handleIncrement = product => {\n      console.log(product);\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  /*\n  doHandleIncrement = () => {\n      this.handleIncrement({ id: 1 });\n  }*/\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.handleIncrement(producr),\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Increment\"));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/ngraham/Documents/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","handleIncrement","product","console","log","setState","render","getBadgeClasses","formatCount","producr","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE;AADH,KADoB;;AAAA,SA2B5BC,eA3B4B,GA2BVC,OAAO,IAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KA9B2B;AAAA;;AA+BhC;;;;AAKIM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKP,eAAL,CAAqBQ,OAArB,CAAvB;AAAsD,MAAA,SAAS,EAAC,0BAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ;AAMH;;AAEDF,EAAAA,eAAe,GAAG;AACd,QAAIG,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKX,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOU,OAAP;AACH;;AAEDF,EAAAA,WAAW,GAAG;AAAA,UACFR,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAtD2B;;AAyDhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n    state = {\n        count: 0\n    };\n\n    /*renderTags() {\n       if(this.state.tags.length === 0) return <p>There are no tags!</p>\n\n       return     <ul>\n       { this.state.tags.map(tag => <li key={tag}>{tag}</li>) }\n   </ul>\n   } \n\n    render() {\n        return (\n            <div>\n                { this.state.tags.length === 0 && 'Please create a new tag!'}\n                { this.renderTags() }\n            </div>\n        );\n    }*/\n\n /*   constructor() {\n        super();\n        this.handleIncrement = this.handleIncrement.bind(this);\n    }*/\n\n    handleIncrement = product => {\n        console.log(product);\n        this.setState({ count: this.state.count + 1 });\n    }\n/*\ndoHandleIncrement = () => {\n    this.handleIncrement({ id: 1 });\n}*/\n\n    render() {\n        return (\n            <div>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button onClick={() => this.handleIncrement(producr)} className=\"btn btn-secondary btn-sm\">Increment</button>\n            </div>\n        );\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount() {\n        const { count } = this.state;\n        return count === 0 ? 'Zero' : count;\n    }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}