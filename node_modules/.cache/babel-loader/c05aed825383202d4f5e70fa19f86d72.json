{"ast":null,"code":"var _jsxFileName = \"/Users/ngraham/Documents/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  /*renderTags() {\n     if(this.state.tags.length === 0) return <p>There are no tags!</p>\n      return     <ul>\n     { this.state.tags.map(tag => <li key={tag}>{tag}</li>) }\n  </ul>\n  } \n   render() {\n      return (\n          <div>\n              { this.state.tags.length === 0 && 'Please create a new tag!'}\n              { this.renderTags() }\n          </div>\n      );\n  }*/\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n    this.handleIncrement.bind();\n  }\n\n  handleIncrement() {\n    console.log('Increment Clicked');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: this.handleIncrement(),\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, tag))));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/ngraham/Documents/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","tags","handleIncrement","bind","console","log","render","getBadgeClasses","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAM5B;;;;;;;;;;;;;;AAiBAE,EAAAA,WAAW,GAAG;AACV;AADU,SAtBdC,KAsBc,GAtBN;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAFF,KAsBM;AAEV,SAAKC,eAAL,CAAqBC,IAArB;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKN,eAAL,EAAjB;AAAyC,MAAA,SAAS,EAAC,0BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKH,KAAL,CAAWE,IAAX,CAAgBQ,GAAhB,CAAoBC,GAAG,IAAI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAA3B,CADN,CAHJ,CADJ;AASH;;AAEDH,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOW,OAAP;AACH;;AAEDH,EAAAA,WAAW,GAAG;AAAA,UACFR,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AArD2B;;AAwDhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n    state = {\n        count: 0,\n        tags: ['tag1','tag2','tag3']\n    };\n\n    /*renderTags() {\n       if(this.state.tags.length === 0) return <p>There are no tags!</p>\n\n       return     <ul>\n       { this.state.tags.map(tag => <li key={tag}>{tag}</li>) }\n   </ul>\n   } \n\n    render() {\n        return (\n            <div>\n                { this.state.tags.length === 0 && 'Please create a new tag!'}\n                { this.renderTags() }\n            </div>\n        );\n    }*/\n\n    constructor() {\n        super();\n        this.handleIncrement.bind()\n    }\n\n    handleIncrement() {\n        console.log('Increment Clicked');\n    }\n\n    render() {\n        return (\n            <div>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button onClick={this.handleIncrement()} className=\"btn btn-secondary btn-sm\">Increment</button>\n                <ul>\n                    { this.state.tags.map(tag => <li key={tag}>{tag}</li>) }\n                </ul>\n            </div>\n        );\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount() {\n        const { count } = this.state;\n        return count === 0 ? 'Zero' : count;\n    }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}